name: Deploy-to-dev-sbs
on:
  workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev-gcp:personbruker
    steps:
      - uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
      - name: Define app environmment
        env:
          TILBAKEMELDINGER_API_ENHETERRS_APIKEY_USERNAME: ${{ secrets.TILBAKEMELDINGER_API_ENHETERRS_APIKEY_USERNAME }}
          TILBAKEMELDINGER_API_ENHETERRS_APIKEY_PASSWORD: ${{ secrets.TILBAKEMELDINGER_API_ENHETERRS_APIKEY_PASSWORD }}
          TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_USERNAME: ${{ secrets.TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_USERNAME }}
          TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_PASSWORD: ${{ secrets.TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_PASSWORD }}
          TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_USERNAME: ${{ secrets.TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_USERNAME }}
          TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_PASSWORD: ${{ secrets.TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_PASSWORD }}
          SRVTILBAKEMELDINGER_API_USERNAME: ${{ secrets.SRVTILBAKEMELDINGER_API_USERNAME }}
          SRVTILBAKEMELDINGER_API_PASSWORD: ${{ secrets.SRVTILBAKEMELDINGER_API_PASSWORD }}
        run: |
          cat > .env <<EOF
          ENHETERRS_URL=https://api-gw.oera.no/oppdaterenhetsinfo/api/hentenheter/
          TILBAKEMELDINGSMOTTAK_URL=https://api-gw.oera.no/tilbakemeldingsmottak/rest/
          SECURITY_TOKEN_SERVICE_TOKEN_URL=https://api-gw-q0.oera.no/security-token-service/rest/v1/sts/token/
          TILBAKEMELDINGER_API_ENHETERRS_APIKEY_USERNAME=$TILBAKEMELDINGER_API_ENHETERRS_APIKEY_USERNAME
          TILBAKEMELDINGER_API_ENHETERRS_APIKEY_PASSWORD=$TILBAKEMELDINGER_API_ENHETERRS_APIKEY_PASSWORD
          TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_USERNAME=$TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_USERNAME
          TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_PASSWORD=$TILBAKEMELDINGER_API_TILBAKEMELDINGSMOTTAK_APIKEY_PASSWORD
          TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_USERNAME=$TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_USERNAME
          TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_PASSWORD=$TILBAKEMELDINGER_API_SECURITY_TOKEN_SERVICE_TOKEN_APIKEY_PASSWORD
          SRVTILBAKEMELDINGER_API_USERNAME=$SRVTILBAKEMELDINGER_API_USERNAME
          SRVTILBAKEMELDINGER_API_PASSWORD=$SRVTILBAKEMELDINGER_API_PASSWORD
          EOF
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm test
      - name: Docker build and push
        run: |
          echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
          docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION
      - name: Generate nais variables
        run: |
          cat > .nais/vars.yaml <<EOF
          namespace: personbruker
          ingresses:
            - https://www.dev.nav.no/person/tilbakemeldinger-api
          image: $IMAGE_REGISTRY/$IMAGE_NAME
          version: $IMAGE_VERSION
          EOF
      - uses: nais/deploy/actions/deploy@master
        env:
          CLUSTER: dev-sbs
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: .nais/config.yaml
          VARS: .nais/vars.yaml
